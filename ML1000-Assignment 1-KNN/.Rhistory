crashes_data_clean <- read.csv('../motor_vehicle_collisions_crashes_cleaned.csv')
#crashes_data_clean <- crashes_data[!(is.na(crashes_data$ZIP.CODE)),]
library(dplyr)
## Drop 3rd,4th and 5th columns of the dataframe
crashes_data_select <- select(crashes_data_clean,-c(1,3, 9, 10))
num_crashes <- crashes_data_clean$total_number_of_crashes
##round to 3 decimal places
#crashes_data_select$LATITUDE <- round(crashes_data_select$LATITUDE, digits=3)
#crashes_data_select$LONGITUDE <- round(crashes_data_select$LONGITUDE, digits=3)
##Concat lat and long columns into one
c#rashes_data_select$POINT.LOCATION = paste(crashes_data_select$LATITUDE,",",crashes_data_select$LONGITUDE)
##DROP YEAR FROM DATE
#crashes_data_select$CRASH.DATE <- as.Date(crashes_data_select$CRASH.DATE, "%m/%d/%Y")
#crashes_data_select$CRASH.DATE <- format(crashes_data_select$CRASH.DATE, format="%m/%d")
#crashes_data_select$CRASH.DATE <- as.Date(crashes_data_select$CRASH.DATE, "%m/%d")
#table(crashes_data_select$CRASH.DATE)
##round times
#library(lubridate)
##crashes_data_select$CRASH.ROUNDTIME <- as.Date(crashes_data_select$CRASH.TIME, "%H:%M")
#crashes_data_select$CRASH.ROUNDTIME <- strptime(crashes_data_select$CRASH.TIME, "%HH:%M")
#crashes_data_select$CRASH.ROUNDTIME <- round_date(crashes_data_select$CRASH.ROUNDTIME, unit="30 minutes")
#crashes_data_select$CRASH.ROUNDTIME <- format(crashes_data_select$CRASH.ROUNDTIME, format="%H:%M")
# library(caTools)
# set.seed(123)
# data_sample = sample.split(crashes_data_select$precinct,SplitRatio=0.80)
# train_data = subset(crashes_data_select,data_sample==TRUE)
# test_data = subset(crashes_data_select,data_sample==FALSE)
set.seed(123) # set the seed to make the partition reproducible
# 80% of the sample size
smp_size <- floor(0.80 * nrow(crashes_data_select))
train_ind <- sample(seq_len(nrow(crashes_data_select)), size = smp_size)
# creating test and training sets that contain all of the predictors
crashes_pred_train <- crashes_data_select[train_ind, ]
crashes_pred_test <- crashes_data_select[-train_ind, ]
num_crashes <- as.data.frame(num_crashes)
#Split outcome variable into training and test sets using the same partition as above.
num_crashes_train <- num_crashes[train_ind, ]
num_crashes_test <- num_crashes[-train_ind, ]
install.packages("FNN")
library(FNN)
knn_output <- knn.reg(crashes_pred_train, crashes_pred_test, num_crashes_train, k = 4)
print(knn_output)
#plot(crashes_pred_test, knn_output$pred, xlab="y", ylab=expression(hat(y)))
printcp(knn_output)
#plot(crashes_pred_test, knn_output$pred, xlab="y", ylab=expression(hat(y)))
library(rpart)
printcp(knn_output)
printcp(knn_output$pred)
plot(crashes_pred_test, knn_output$pred, xlab="y", ylab=expression(hat(y)))
?ggplot
library(ggplot)
#plot(crashes_pred_test, knn_output$pred, xlab="y", ylab=expression(hat(y)))
install.packages("ggplot")
?ggplot
?ggplot
ggplot
?ggplot
plot(crashes_pred_test, knn_output$pred, xlab="y", ylab=expression(hat(y)))
