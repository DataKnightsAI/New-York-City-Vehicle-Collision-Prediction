crashes_data <- read.csv('../crashes.csv')

#crashes_data_clean <- crashes_data[!(is.na(crashes_data$ZIP.CODE)),]

library(dplyr)


# Drop 3rd,4th and 5th columns of the dataframe
crashes_data_select <- select(crashes_data,-c(3:4,7:29))

#round to 3 decimal places
crashes_data_select$LATITUDE <- round(crashes_data_select$LATITUDE, digits=3)
crashes_data_select$LONGITUDE <- round(crashes_data_select$LONGITUDE, digits=3)

#Concat lat and long columns into one
crashes_data_select$POINT.LOCATION = paste(crashes_data_select$LATITUDE,",",crashes_data_select$LONGITUDE)

#DROP YEAR FROM DATE

crashes_data_select$CRASH.DATE <- as.Date(crashes_data_select$CRASH.DATE, "%m/%d/%Y")
crashes_data_select$CRASH.DATE <- format(crashes_data_select$CRASH.DATE, format="%m/%d")
crashes_data_select$CRASH.DATE <- as.Date(crashes_data_select$CRASH.DATE, "%m/%d")
table(crashes_data_select$CRASH.DATE)

#round times
library(lubridate)
#crashes_data_select$CRASH.ROUNDTIME <- as.Date(crashes_data_select$CRASH.TIME, "%H:%M")
crashes_data_select$CRASH.ROUNDTIME <- strptime(crashes_data_select$CRASH.TIME, "%HH:%M")
crashes_data_select$CRASH.ROUNDTIME <- round_date(crashes_data_select$CRASH.ROUNDTIME, unit="30 minutes")
crashes_data_select$CRASH.ROUNDTIME <- format(crashes_data_select$CRASH.ROUNDTIME, format="%H:%M")

library(caTools)
set.seed(123)
data_sample = sample.split(crashes_data_clean$ZIP.CODE,SplitRatio=0.80)
train_data = subset(crashes_data_clean,data_sample==TRUE)
test_data = subset(crashes_data_clean,data_sample==FALSE)
dim(train_data)
dim(test_data)

# Num of zip codes in clean data
as.data.frame(table(crashes_data_clean$ZIP.CODE))

#DECISION TREE ALGO

# Next, we will implement a decision tree algorithm. Decision Trees to plot the outcomes of a decision. These outcomes are basically a consequence through
# which we can conclude as to what class the object belongs to. We will now implement our decision tree model and will plot it using the rpart.plot()
# function. We will specifically use the recursive parting to plot the decision tree.

library(rpart)
library(rpart.plot)
decisionTree_model <- rpart(ZIP.CODE ~ . , train_data, method = 'class')
predicted_val <- predict(decisionTree_model, test_data, type = 'class')
probability <- predict(decisionTree_model, test_data, type = 'prob')
rpart.plot(decisionTree_model)
auc.rp = roc(test_data$Class, factor(predicted_val, ordered = TRUE), plot = TRUE, col = "blue")
auc.rp
